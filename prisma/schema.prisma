generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Module {
  id          String   @id @default(cuid())
  title       String
  description String
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  emoji       String
  cards       Card[]
  user        User     @relation(fields: [userId], references: [id])
}

model Card {
  id          String   @id @default(cuid())
  front       String
  back        String
  moduleId    String
  interval    Int      @default(1)
  repetitions Int      @default(0)
  dueDate     DateTime @default(now())
  createdAt   DateTime @default(now())
  module      Module   @relation(fields: [moduleId], references: [id], onDelete: Cascade)
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String?
  access_token             String?
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String?
  session_state            String?
  refresh_token_expires_in Int?
  user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                 String    @id @default(cuid())
  name               String?
  email              String?   @unique
  emailVerified      DateTime?
  image              String?
  maxCardsPerSession Int       @default(10)
  accounts           Account[]
  modules            Module[]
  sessions           Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
